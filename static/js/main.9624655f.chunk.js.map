{"version":3,"sources":["Workouts.tsx","Routine.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["columns","name","selector","sortable","format","row","targets","join","variants","wrap","style","textAlign","TextFilter","setFilter","InputGroup","FormControl","placeholder","onChange","target","f","text","value","Workouts","workouts","useState","filter","data","w","some","t","toLowerCase","includes","title","keyField","striped","subHeader","subHeaderComponent","pickRandomly","xs","rng","Math","random","reduce","v","acc","r","Entry","rounds","n","ListGroup","Item","Badge","variant","Routine","setRounds","seedrandom","int32","seed","setSeed","toString","entries","input","j","x","o","i","length","floor","shuffle","equipment","slice","flatMap","map","props","Container","Row","Col","md","Prepend","Text","htmlSize","Number","parseInt","onClick","isNaN","as","Home","className","Tabbed","history","useHistory","location","pathname","key","setKey","useEffect","push","Tabs","activeKey","onSelect","k","Tab","eventKey","App","basename","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9624655f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { InputGroup, FormControl } from \"react-bootstrap\";\nimport DataTable from \"react-data-table-component\";\n\nexport type Workout = {\n  name: string;\n  targets: string[];\n  variants?: string[];\n  equipment?: string;\n};\n\nconst columns = [\n  { name: \"Workout\", selector: \"name\", sortable: true },\n  {\n    name: \"Targets\",\n    selector: \"targets\",\n    format: (row: Workout) => row.targets.join(\", \"),\n  },\n  {\n    name: \"Variants\",\n    selector: \"variants\",\n    format: (row: Workout) => row.variants?.join(\", \"),\n    wrap: true,\n    style: { textAlign: \"left\" } as const,\n  },\n  { name: \"Equipment\", selector: \"equipment\" },\n];\n\ntype Filter = { text?: string };\n\ntype StateSetter<T> = React.Dispatch<React.SetStateAction<T>>;\n\ntype FilterProps = { setFilter: StateSetter<Filter> };\n\nconst TextFilter = ({ setFilter }: FilterProps) => (\n  <InputGroup>\n    <FormControl\n      placeholder=\"All\"\n      onChange={({ target }) =>\n        setFilter((f: Filter) => ({ ...f, text: target.value }))\n      }\n    />\n  </InputGroup>\n);\n\ntype WorkoutsProps = { workouts: Workout[] };\n\nconst Workouts = ({ workouts }: WorkoutsProps) => {\n  const [filter, setFilter] = useState<Filter>({});\n\n  const data = workouts.filter(\n    (w) =>\n      !filter.text ||\n      [w.name, ...w.targets, ...(w.variants ?? [])].some((t) =>\n        t.toLowerCase().includes(filter?.text?.toLowerCase() ?? \"\")\n      )\n  );\n\n  return (\n    <DataTable\n      title=\"Workouts\"\n      columns={columns}\n      data={data}\n      keyField=\"name\"\n      striped\n      subHeader\n      subHeaderComponent={<TextFilter {...{ setFilter }} />}\n    />\n  );\n};\n\nexport { Workouts };\n","import React, { useState } from \"react\";\nimport {\n  Col,\n  Row,\n  Container,\n  Badge,\n  ListGroup,\n  InputGroup,\n  FormControl,\n} from \"react-bootstrap\";\nimport seedrandom from \"seedrandom\";\n\nimport { Workout } from \"./Workouts\";\n\ntype EntryProps = {\n  rounds: number;\n  n: number;\n  name: string;\n  variants?: string[];\n  rng?: () => number;\n};\n\nconst pickRandomly = <T,>(xs: T[], rng = Math.random): T | null =>\n  xs.reduce(\n    ({ acc, w }: { acc: number; w: T | null }, v) => {\n      const r = rng();\n      return r > acc ? { acc: r, w: v } : { acc, w };\n    },\n    { acc: 0, w: null }\n  ).w;\n\nconst Entry = ({ rounds, n, name, variants, rng }: EntryProps) => (\n  <ListGroup.Item>\n    <Badge variant=\"primary\">{n}</Badge> {name}\n    {variants ? ` (${pickRandomly(variants, rng)}) ` : \" \"}\n    <Badge variant=\"light\">Ã—{n * (rounds + 1 - n)}</Badge>\n  </ListGroup.Item>\n);\n\nexport type RoutineProps = { workouts: Workout[] };\n\nconst defaultRounds = 12;\n\nconst shuffle = <T,>(input: T[], rng = Math.random) => {\n  const o = [...input];\n  for (\n    var j, x, i = o.length;\n    i;\n    j = Math.floor(rng() * i), x = o[--i], o[i] = o[j], o[j] = x\n  );\n  return o;\n};\n\nconst Routine = ({ workouts }: RoutineProps) => {\n  const [rounds, setRounds] = useState<number>(defaultRounds);\n  const [seed, setSeed] = useState<number>(seedrandom().int32());\n\n  const rng = seedrandom(seed.toString());\n  const viable = workouts.filter((w) => !w.equipment);\n  const entries = shuffle(viable, rng)\n    .slice(0, rounds - 1)\n    .flatMap((x, n) => (n === 0 ? [{ name: \"Plank\" }, x] : x))\n    .map((props, n) => (\n      <Entry\n        key={`${n}-${props.name}}}`}\n        n={n + 1}\n        {...{ ...props, rounds, rng }}\n      />\n    ));\n\n  return (\n    <Container>\n      <header>\n        <Row>\n          <Col>\n            <h1>Routine</h1>\n          </Col>\n        </Row>\n        <Row>\n          <Col md=\"auto\">Total {0.5 * rounds * (rounds + 1)}</Col>\n          <Col md=\"auto\">\n            <InputGroup>\n              <InputGroup.Prepend>\n                <InputGroup.Text>#</InputGroup.Text>\n              </InputGroup.Prepend>\n              <FormControl\n                placeholder=\"12\"\n                htmlSize={2}\n                onChange={({ target }) =>\n                  setRounds(Number.parseInt(target?.value) || defaultRounds)\n                }\n              />\n            </InputGroup>\n          </Col>\n          <Col md=\"auto\">\n            <InputGroup>\n              <InputGroup.Prepend>\n                <InputGroup.Text onClick={() => setSeed(rng.int32())}>\n                  Seed\n                </InputGroup.Text>\n              </InputGroup.Prepend>\n              <FormControl\n                placeholder={seed?.toString() ?? \"\"}\n                htmlSize={10}\n                onChange={({ target }) => {\n                  const i = Number.parseInt(target?.value);\n                  isNaN(i) ? setSeed(rng.int32()) : setSeed(i);\n                }}\n              />\n            </InputGroup>\n          </Col>\n        </Row>\n      </header>\n      <Row>\n        <Col>\n          <ListGroup as=\"ol\">{entries}</ListGroup>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport { Routine };\n","import React, { useState, useEffect } from \"react\";\nimport { Tabs, Tab } from \"react-bootstrap\";\nimport { BrowserRouter as Router, useHistory } from \"react-router-dom\";\n\nimport \"./App.css\";\n\nimport { Workouts } from \"./Workouts\";\nimport { Routine } from \"./Routine\";\n\nimport workouts from \"./workouts.json\";\n\nconst Home = () => (\n  <header className=\"App-header\">\n    <h1>Mi Yodea</h1>\n    <h2>\n      <i>a.k.a.</i> 12 Days of Christmas workout\n    </h2>\n    <p>Who knows one?</p>\n  </header>\n);\n\nconst Tabbed = () => {\n  const history = useHistory();\n  const [key, setKey] = useState<string>(history.location.pathname);\n\n  useEffect(() => {\n    if (history.location.pathname !== key) history.push(key);\n  }, [history, key]);\n\n  return (\n    <Tabs activeKey={key} onSelect={(k) => setKey(k ?? \"/\")}>\n      <Tab eventKey=\"/\" title=\"Home\">\n        <Home />\n      </Tab>\n      <Tab eventKey=\"/routine\" title=\"Routine\">\n        <Routine {...{ workouts }} />\n      </Tab>\n      <Tab eventKey=\"/workouts\" title=\"Workouts\">\n        <Workouts {...{ workouts }} />\n      </Tab>\n    </Tabs>\n  );\n};\n\nconst App = () => (\n  <div className=\"App\">\n    <Router basename={`${process.env.NODE_ENV === \"test\" ? \"\" : \"/miyodea\"}`}>\n      <Tabbed />\n    </Router>\n  </div>\n);\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}